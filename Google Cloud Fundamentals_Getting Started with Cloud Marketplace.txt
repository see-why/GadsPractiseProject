gcloud beta compute --project=qwiklabs-gcp-01-92d9eb5f3221 instances create lampstack-1-vm-1 --zone=us-central1-b --machine-type=f1-micro --subnet=default --network-tier=PREMIUM --metadata=^,@^bitnami-base-password=wPEw6vUShDwq,@status-config-url=https://runtimeconfig.googleapis.com/v1beta1/projects/qwiklabs-gcp-01-92d9eb5f3221/configs/lampstack-1-config,@status-variable-path=status,@status-uptime-deadline=1800,@google-monitoring-enable=0,@google-logging-enable=0,@startup-script=\#\!/bin/bash$'\n'$'\n'set\ -e$'\n'$'\n'DEFAULT_UPTIME_DEADLINE=\"300\"\ \ \#\ 5\ minutes$'\n'$'\n'metadata_value\(\)\ \{$'\n'\ \ curl\ --retry\ 5\ -sfH\ \"Metadata-Flavor:\ Google\"\ \\$'\n'\ \ \ \ \ \ \ \"http://metadata/computeMetadata/v1/\$1\"$'\n'\}$'\n'$'\n'access_token\(\)\ \{$'\n'\ \ metadata_value\ \"instance/service-accounts/default/token\"\ \\$'\n'\ \ \|\ python\ -c\ \"import\ sys,\ json\;\ print\ json.load\(sys.stdin\)\[\'access_token\'\]\"$'\n'\}$'\n'$'\n'uptime_seconds\(\)\ \{$'\n'\ \ seconds=\"\$\(cat\ /proc/uptime\ \|\ cut\ -d\'\ \'\ -f1\)\"$'\n'\ \ echo\ \$\{seconds\%\%.\*\}\ \ \#\ delete\ floating\ point.$'\n'\}$'\n'$'\n'config_url\(\)\ \{\ metadata_value\ \"instance/attributes/status-config-url\"\;\ \}$'\n'instance_id\(\)\ \{\ metadata_value\ \"instance/id\"\;\ \}$'\n'variable_path\(\)\ \{\ metadata_value\ \"instance/attributes/status-variable-path\"\;\ \}$'\n'project_name\(\)\ \{\ metadata_value\ \"project/project-id\"\;\ \}$'\n'uptime_deadline\(\)\ \{$'\n'\ \ metadata_value\ \"instance/attributes/status-uptime-deadline\"\ \\$'\n'\ \ \ \ \ \ \|\|\ echo\ \$DEFAULT_UPTIME_DEADLINE$'\n'\}$'\n'$'\n'config_name\(\)\ \{$'\n'\ \ python\ -\ \$\(config_url\)\ \<\<EOF$'\n'import\ sys,\ urlparse$'\n'parsed\ =\ urlparse.urlparse\(sys.argv\[1\]\)$'\n'print\ \'/\'.join\(parsed.path.rstrip\(\'/\'\).split\(\'/\'\)\[-4:\]\)$'\n'EOF$'\n'\}$'\n'$'\n'variable_body\(\)\ \{$'\n'\ \ encoded_value=\$\(echo\ \"\$2\"\ \|\ base64\)$'\n'\ \ printf\ \'\{\"name\":\"\%s\",\ \"value\":\"\%s\"\}\\n\'\ \"\$1\"\ \"\$encoded_value\"$'\n'\}$'\n'$'\n'post_result\(\)\ \{$'\n'\ \ var_subpath=\$1$'\n'\ \ var_value=\$2$'\n'\ \ var_path=\"\$\(config_name\)/variables/\$var_subpath/\$\(instance_id\)\"$'\n'$'\n'\ \ curl\ --retry\ 5\ -sH\ \"Authorization:\ Bearer\ \$\(access_token\)\"\ \\$'\n'\ \ \ \ \ \ -H\ \"Content-Type:\ application/json\"\ \\$'\n'\ \ \ \ \ \ -X\ POST\ -d\ \"\$\(variable_body\ \"\$var_path\"\ \"\$var_value\"\)\"\ \\$'\n'\ \ \ \ \ \ \"\$\(config_url\)/variables\"$'\n'\}$'\n'$'\n'post_success\(\)\ \{$'\n'\ \ post_result\ \"\$\(variable_path\)/success\"\ \"\$\{1:-Success\}\"$'\n'\}$'\n'$'\n'post_failure\(\)\ \{$'\n'\ \ post_result\ \"\$\(variable_path\)/failure\"\ \"\$\{1:-Failure\}\"$'\n'\}$'\n'$'\n'\#\ The\ contents\ of\ initScript\ are\ contained\ within\ this\ function.$'\n'custom_init\(\)\ \($'\n'\ \ return\ 0$'\n'\)$'\n'$'\n'\#\ The\ contents\ of\ checkScript\ are\ contained\ within\ this\ function.$'\n'check_success\(\)\ \($'\n'\ \ failed=\$\(/etc/init.d/bitnami\ status\ \|\ grep\ \"not\ running\"\ \|\ cut\ -d\"\ \"\ -f1\ \|\ tr\ \"\\n\"\ \"\ \"\)$'\n'\ \ if\ \[\ \!\ -z\ \"\$failed\"\ \]\;\ then$'\n'\ \ \ \ echo\ \"Processes\ failed\ to\ start:\ \$failed\"$'\n'\ \ \ \ exit\ 1$'\n'\ \ fi$'\n'\)$'\n'$'\n'check_success_with_retries\(\)\ \{$'\n'\ \ deadline=\"\$\(uptime_deadline\)\"$'\n'\ \ while\ \[\ \"\$\(uptime_seconds\)\"\ -lt\ \"\$deadline\"\ \]\;\ do$'\n'\ \ \ \ message=\$\(check_success\)$'\n'\ \ \ \ case\ \$\?\ in$'\n'\ \ \ \ 0\)$'\n'\ \ \ \ \ \ \#\ Success.$'\n'\ \ \ \ \ \ return\ 0$'\n'\ \ \ \ \ \ \;\;$'\n'\ \ \ \ 1\)$'\n'\ \ \ \ \ \ \#\ Not\ ready\;\ continue\ loop$'\n'\ \ \ \ \ \ \;\;$'\n'\ \ \ \ \*\)$'\n'\ \ \ \ \ \ \#\ Failure\;\ abort.$'\n'\ \ \ \ \ \ echo\ \$message$'\n'\ \ \ \ \ \ return\ 1$'\n'\ \ \ \ \ \ \;\;$'\n'\ \ \ \ esac$'\n'$'\n'\ \ \ \ sleep\ 5$'\n'\ \ done$'\n'$'\n'\ \ \#\ The\ check\ was\ not\ successful\ within\ the\ required\ deadline.$'\n'\ \ echo\ \"status\ check\ timeout\"$'\n'\ \ return\ 1$'\n'\}$'\n'$'\n'do_init\(\)\ \{$'\n'\ \ \#\ Run\ the\ init\ script\ first.\ If\ no\ init\ script\ was\ specified,\ this$'\n'\ \ \#\ is\ a\ no-op.$'\n'\ \ echo\ \"software-status:\ initializing...\"$'\n'$'\n'\ \ set\ \+e$'\n'\ \ message=\"\$\(custom_init\)\"$'\n'\ \ result=\$\?$'\n'\ \ set\ -e$'\n'$'\n'\ \ if\ \[\ \$result\ -ne\ 0\ \]\;\ then$'\n'\ \ \ \ echo\ \"software-status:\ init\ failure\"$'\n'\ \ \ \ post_failure\ \"\$message\"$'\n'\ \ \ \ return\ 1$'\n'\ \ fi$'\n'\}$'\n'$'\n'do_check\(\)\ \{$'\n'\ \ \#\ Poll\ for\ success.$'\n'\ \ echo\ \"software-status:\ waiting\ for\ software\ to\ become\ ready...\"$'\n'\ \ set\ \+e$'\n'\ \ message=\"\$\(check_success_with_retries\)\"$'\n'\ \ result=\$\?$'\n'\ \ set\ -e$'\n'$'\n'\ \ if\ \[\ \$result\ -eq\ 0\ \]\;\ then$'\n'\ \ \ \ echo\ \"software-status:\ success\"$'\n'\ \ \ \ post_success$'\n'\ \ else$'\n'\ \ \ \ echo\ \"software-status:\ failed\ with\ message:\ \$message\"$'\n'\ \ \ \ post_failure\ \"\$message\"$'\n'\ \ fi$'\n'\}$'\n'$'\n'\#\ Run\ the\ initialization\ script\ synchronously.$'\n'do_init\ \|\|\ exit\ \$\?$'\n'$'\n'\#\ The\ actual\ software\ initialization\ might\ come\ after\ google\'s\ init.d$'\n'\#\ script\ that\ executes\ our\ startup\ script.\ Thus,\ launch\ this\ script$'\n'\#\ into\ the\ background\ so\ that\ it\ does\ not\ block\ init\ and\ eventually$'\n'\#\ timeout\ while\ waiting\ for\ software\ to\ start.$'\n'do_check\ \&\ disown --maintenance-policy=MIGRATE --service-account=700688987284-compute@developer.gserviceaccount.com --scopes=https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/cloud.useraccounts.readonly,https://www.googleapis.com/auth/cloudruntimeconfig --tags=lampstack-1-deployment --image=bitnami-lampstack-7-4-10-0-linux-debian-10-x86-64-nami --image-project=bitnami-launchpad --boot-disk-size=10GB --boot-disk-type=pd-standard --boot-disk-device-name=lampstack-1-vm-1 --labels=goog-dm=lampstack-1 --reservation-affinity=any



cd /opt/bitnami
sudo sh -c 'echo "<?php phpinfo(); ?>" > apache2/htdocs/phpinfo.php'
exit



http://SITE_ADDRESS/phpinfo.php
